  <ng-container *ngFor="let param of bankAccountAgregatDto">
                        <tr>
                          <td>{{param.customerNumber}}</td>
                          <td>{{param.displayName}}</td>
                          <td>{{param.accountNumber}}</td>
                          <td>{{param.codeAgence}}</td>
                          <td><nb-checkbox (checkedChange)="toggle(param, $event)"></nb-checkbox></td>
                        </tr>
                        <tr *ngIf="isSelected(param)">
                          <td colspan="5">
                            <div class="d-flex">
                              <input nbInput placeholder="Entrez le motif de cloture du compte selectionnÃ©" [(ngModel)]="param.motifCloture" fullWidth>
                            </div>
                          </td>
                        </tr>
                      </ng-container>
toggle(account: BankAccountAggregateDto, event: any) {
    if (event) {
      this.listSelectedAccount.push(account);
    } else {
      this.listSelectedAccount = this.listSelectedAccount.filter(acc => acc.accountNumber !== account.accountNumber);
    }
  }
  isSelected(account: BankAccountAggregateDto): boolean {
    return this.listSelectedAccount.some(acc => acc.accountNumber === account.accountNumber);
  }
  editRequest() {
    this.listSelectedAccount.forEach(value => {
      if(!value){
        this.showToast('merci de selectionner un compte','Compte','danger');
      }
      else{
        console.log("edit request");
        console.log(value)
          const sccRequestDto :  SccRequestDto = {
            bankAcountAggregateDto : value,
            motifCloture : value.motifCloture,
            performer : 'mustapha.bahbah@socgen.com',
            canal : Canal.AGENCE,
            attachmentDtos: [],
            bpmnActivityList: [],
            editHistoryList: [],
          }
          this.generateFile(sccRequestDto);
          this.demandeService.initRequest(sccRequestDto).pipe(
            map(response => {
              this.responseRequest = response;
              this.initForm();
              this.isUploading = false;
              // Handle success
            }),
            catchError(err => {
              // Handle error
              return of(err);
            })
          ).subscribe();
      }
    })
  }
